version: '3.8'

services:
  api-application:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - bot-network
    environment:
      MONGODB_URI: mongodb://devUser:devPassword@mongodb:27017/discordBotDB?authSource=admin
      NODE_ENV: production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 10s
      retries: 5
      start_period: 30s

  discord-bot:
    build:
      context: .
      dockerfile: Dockerfile.app
    depends_on:
      api-application:
        condition: service_started
    networks:
      - bot-network
    environment:
      API_BASE_URL: http://api-application:5000 #points just to api application (simplification)
    restart: on-failure

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    networks:
      - bot-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: devUser
      MONGO_INITDB_ROOT_PASSWORD: devPassword
    command: ["mongod", "--bind_ip_all", "--auth"]
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 15

networks:
  bot-network:
    driver: bridge

volumes:
  mongo-data:
